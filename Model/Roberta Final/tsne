{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"tsne","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNy02JpSMnHmhRBfy+u2XGK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"ez_kMDBzdMRX","executionInfo":{"status":"ok","timestamp":1631409340364,"user_tz":420,"elapsed":215,"user":{"displayName":"Huy Nghiem","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06903637911945605583"}}},"source":["# in this module we create vectors representation of each tweet from Founta and ours \n","# for comparison then visualize them using tSNE"],"execution_count":25,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-1KNnvyGdhfX","executionInfo":{"status":"ok","timestamp":1631409340612,"user_tz":420,"elapsed":255,"user":{"displayName":"Huy Nghiem","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06903637911945605583"}},"outputId":"19315b29-48c0-41c9-c0ab-0288c67aab2c"},"source":["import pandas as pd \n","import numpy as np , random, os, sys\n","from gensim.models.doc2vec import Doc2Vec, TaggedDocument\n","import matplotlib.pyplot as plt\n","from sklearn.manifold import TSNE\n","\n","from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer\n","from collections import Counter\n","import nltk\n","from nltk import word_tokenize\n","from nltk.corpus import stopwords\n","from nltk.stem import WordNetLemmatizer\n","from nltk.tokenize import word_tokenize\n","nltk.download('punkt')\n","nltk.download('stopwords')\n","nltk.download('wordnet')\n","\n","seed = 123\n","random.seed(seed)\n","np.random.seed(seed)"],"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n","[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n","[nltk_data] Downloading package wordnet to /root/nltk_data...\n","[nltk_data]   Package wordnet is already up-to-date!\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sqX1F6Y3hUXI","executionInfo":{"status":"ok","timestamp":1631409340614,"user_tz":420,"elapsed":11,"user":{"displayName":"Huy Nghiem","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06903637911945605583"}},"outputId":"15ca46d8-86e9-405a-f17f-be4da3949151"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","metadata":{"id":"HHcODyc8hZOQ","executionInfo":{"status":"ok","timestamp":1631409340615,"user_tz":420,"elapsed":9,"user":{"displayName":"Huy Nghiem","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06903637911945605583"}}},"source":["DATA_PREFIX = \"/content/drive/MyDrive/Colab Notebooks/Bert Hate Speech/Data/\""],"execution_count":28,"outputs":[]},{"cell_type":"code","metadata":{"id":"EYNrZ3qNgovw","executionInfo":{"status":"ok","timestamp":1631409340872,"user_tz":420,"elapsed":265,"user":{"displayName":"Huy Nghiem","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06903637911945605583"}}},"source":["# Import founta\n","ft = pd.read_csv(DATA_PREFIX + 'founta_final_data.csv', dtype={'label_cat':str, 'text':str})\n","ft['id'] = ft.index\n","ft.loc[ft.label_cat =='hateful', 'label_cat'] = 'hate'\n","\n","\n","# Imoort ours \n","her = pd.read_csv(DATA_PREFIX + 'HER_final_data.csv', dtype={'max_speech_type':str, 'text':str})\n","her.reset_index(drop=True, inplace=True)\n","her['id'] = her.index"],"execution_count":29,"outputs":[]},{"cell_type":"code","metadata":{"id":"W0FH8hmTn30V","executionInfo":{"status":"ok","timestamp":1631409340873,"user_tz":420,"elapsed":12,"user":{"displayName":"Huy Nghiem","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06903637911945605583"}}},"source":["ft.text = ft.text.apply(lambda x: x.replace('<user>',''))\n","ft.text = ft.text.apply(lambda x: x.replace('<url>',''))\n","\n","her.text = her.text.apply(lambda x: x.replace('<user>',''))\n","her.text = her.text.apply(lambda x: x.replace('<url>',''))"],"execution_count":30,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VSyqK8M8kmCV"},"source":[""]},{"cell_type":"code","metadata":{"id":"5wjRZ3n8h3jq","executionInfo":{"status":"ok","timestamp":1631409340875,"user_tz":420,"elapsed":11,"user":{"displayName":"Huy Nghiem","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06903637911945605583"}}},"source":["# tagged_t = [TaggedDocument(words = word_tokenize(_d)) for idx, ]"],"execution_count":31,"outputs":[]},{"cell_type":"code","metadata":{"id":"HK94ZziOjG-S","executionInfo":{"status":"ok","timestamp":1631409340876,"user_tz":420,"elapsed":11,"user":{"displayName":"Huy Nghiem","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06903637911945605583"}}},"source":["def get_vector(df, var, cat, model_params, n_samples = None):\n","    # creat tagged data\n","    if cat is None: \n","        temp_df = df.copy()\n","    else: \n","        temp_df = df[df[var] == cat]\n","    # tagged_t = [TaggedDocument(words = word_tokenize(_d), tags=[i]) for i, _d in temp_df[[id_var, 'text']].values]\n","    tagged_t = [TaggedDocument(words = word_tokenize(_d), tags=[i]) for i, _d in enumerate(temp_df.text.values)]\n","\n","    tag_ls = [i.tags for i in tagged_t]\n","    print(\"There are {} items in this categories\".format(len(tag_ls)))\n","    # Create and train models\n","    model = Doc2Vec(tagged_t, **model_params)\n","    vectors = list(model.docvecs.vectors_docs)\n","\n","    if n_samples is None: \n","        return vectors\n","    else: \n","        return random.sample(vectors, n_samples)"],"execution_count":32,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"nfMN10BjLYiN"},"source":["## APPROACH 1: trained on the entire founta set, and see if they cluster well;"]},{"cell_type":"code","metadata":{"id":"qSpiij5YjUpi","executionInfo":{"status":"ok","timestamp":1631409340877,"user_tz":420,"elapsed":12,"user":{"displayName":"Huy Nghiem","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06903637911945605583"}}},"source":["# model_params = dict(vector_size=100, window=10, min_count=1, workers=5,  epochs=10)\n","# # out_test = get_vector(ft, 'label_cat',None, model_params)\n","# out_test = get_vector(her, 'max_speec_type',None, model_params)\n","\n","# tsne = TSNE(n_components=3, random_state=seed)\n","# X_tsne = tsne.fit_transform(out_test)\n","\n","# # 3D\n","# df = pd.DataFrame(X_tsne, columns=['x', 'y', 'z'] )\n","\n","# df['label'] = ft.label_cat\n","# # df['label'] = her.max_speech_type\n","\n","# df_sample = df.groupby('label').apply(lambda x: x.sample(230))\n","# df_sample.reset_index(drop=True, inplace=True)\n","\n","# # Creating figure\n","# fig = plt.figure(figsize = (10, 10))\n","# ax = plt.axes(projection =\"3d\")\n"," \n","# c_map = {'abusive':'orange', 'hate':'red', 'normal':'green'}\n","# for c in df_sample.label.unique():\n","#     df_sub = df_sample[df_sample.label == c]\n","#     plt.scatter(df_sub.x, df_sub.y, df_sub.z, color=c_map[c] )\n"],"execution_count":33,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"3niC_5eVmjGO"},"source":["## 2D"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HK-3eewiMX-Z","executionInfo":{"status":"ok","timestamp":1631409372087,"user_tz":420,"elapsed":31220,"user":{"displayName":"Huy Nghiem","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06903637911945605583"}},"outputId":"5c4c387b-7670-472b-8b34-c3ee06f2f27c"},"source":["model_params = dict(vector_size=100, window=5, min_count=1, workers=5,  epochs=10)\n","# out_test = get_vector(ft, 'label_cat',None, model_params)\n","out_test = get_vector(her, 'max_speec_type',None, model_params)\n","\n","tsne = TSNE(n_components=2, random_state=seed)\n","X_tsne = tsne.fit_transform(out_test)\n","\n","# 2D\n","df = pd.DataFrame(X_tsne, columns=['x', 'y'] )"],"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["There are 3000 items in this categories\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"iqR3Zw43Vynu","executionInfo":{"status":"ok","timestamp":1631410606344,"user_tz":420,"elapsed":395,"user":{"displayName":"Huy Nghiem","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06903637911945605583"}},"outputId":"aea14968-bef9-4860-ceb0-222f801edc97"},"source":["# df['label'] = ft.label_cat\n","df['label'] = her.max_speech_type\n","\n","df_sample = df.groupby('label').apply(lambda x: x.sample(200, random_state=seed))\n","df_sample.reset_index(drop=True, inplace=True)\n","\n","fig = plt.figure()\n","\n","c_map = {'abusive':'orange', 'hate':'red', 'normal':'green'}\n","for c in df_sample.label.unique():\n","    df_sub = df_sample[df_sample.label == c]\n","    plt.scatter(df_sub.x, df_sub.y, color=c_map[c] )\n","\n","plt.legend(['Abusive','Hate','Normal'], loc='lower right')\n","plt.show()"],"execution_count":43,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"vg5Hy1AAQxD2","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1631410598294,"user_tz":420,"elapsed":469,"user":{"displayName":"Huy Nghiem","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06903637911945605583"}},"outputId":"7c1822f6-19ec-4a53-8833-f9b6a82f5de1"},"source":["plt.savefig(\"tsne_her_plot.png\", dpi=300)"],"execution_count":42,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 0 Axes>"]},"metadata":{}}]},{"cell_type":"code","metadata":{"id":"UDkW9dqulL2k"},"source":[""],"execution_count":null,"outputs":[]}]}